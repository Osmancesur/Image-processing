import cv2
import numpy

##making the picture gray and saving it into the a folder

img = cv2.imread("Landscpae.jpeg", cv2.IMREAD_GRAYSCALE)
cv2.imshow("resim", img)
cv2.waitKey(0)
cv2.imwrite("D:/trial.jpg",img)

##capturing a video from camera

cap=cv2.VideoCapture(0,cv2.CAP_DSHOW)
#Videocapture returning class named as cap
while True:
    ret, frame = cap.read()
    frame = cv2.flip(frame, 1)
    cv2.imshow("webcam", frame)
    if ord(" ") != cv2.waitKey(1) & 0xFF:
        continue
    break
cv2.waitKey(30)
#30 is a parameter controlling the sample rate

##saving the captured video as gray 
cap=cv2.VideoCapture(0,cv2.CAP_DSHOW)
name_of_video="trial_1"
codec = cv2.VideoWriter_fourcc(*'mp4v')
Rate=30;
resolution=(640,480)
out = cv2.VideoWriter("D:/muhammed/trial_1.mp4", codec, Rate, resolution)

while True:
    ret, frame = cap.read()
    frame = cv2.flip(frame, 1)
    gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    out.write(gray_frame)
    cv2.imshow("webcam", gray_frame)

    if ord(" ") != cv2.waitKey(1) & 0xFF:
        continue
    break
    cv2.waitKey(30)


## Determining the edges and corner in captured video
import cv2
import numpy

video = cv2.VideoCapture(0, cv2.CAP_DSHOW)

while True:
    ret, frame = video.read()
    frame = cv2.flip(frame, 1)
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    corners = cv2.goodFeaturesToTrack(gray, 10000, 0.1, 1)

    if corners is not None:
        corners = numpy.intp(corners)

        for corner in corners:
            x, y = corner.ravel()
            cv2.circle(frame, (x, y), 5, (255, 0, 0), -1)
    cv2.imshow("frame", frame)

    edge = cv2.Canny(frame, 20, 40)
    cv2.imshow("e", edge)
    if cv2.waitKey(10) & 0xFF == ord(" "):
        break

video.release()
cv2.destroyAllWindows()

